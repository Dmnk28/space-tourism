@import "variables";

/* ------------------ */
/* Reset              */
/* ------------------ */

/* Check out for more Resetstuff: https://piccalil.li/blog/a-modern-css-reset/ */

/* Box sizing */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reset margins */
body,
h1,
h2,
h3,
h4,
h5,
p,
figure,
picture {
  margin: 0;
  font-family: $ff-sans-normal;
}

h1,
h2,
h3,
h4,
h5,
p {
  font-weight: 400;
}

/* set up the body */
body,
#__next {
  // position: relative;
  font-family: $ff-sans-normal;
  font-size: $fs-400;
  color: $clr-white;
  // background-color: $clr-dark;
  line-height: 1.5;
  min-height: 100vh;
  display: grid;
  grid-template-rows: min-content 1fr;
  z-index: 1;
  overflow-x: hidden;
}

.z-index-bgr {
  z-index: -1;
}

.z-1 {
  z-index: 1;
}

/* images */
img,
picture {
  max-width: 100%;
  display: block;
}

/* forms elements */
input,
button,
textarea,
select {
  font: inherit;
}

/* remove animations for everyone who has turned them of */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* ------------------ */
/* Utility Classes    */
/* ------------------ */

.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.d-block {
  display: block;
}

.flow > *:where(:not(:first-child)) {
  margin-top: 1rem;
  outline: 1px solid red;
}

.relative {
  position: relative;
}

.container {
  padding-inline: 2rem;
  margin-inline: auto;
  max-width: 80rem;
}

.grid-container {
  display: grid;
  text-align: center;
  place-items: center;
  row-gap: 10%;
  padding: 0 1rem;

  .grid-container * {
    max-width: 50ch;
  }
}

@media (min-width: 45rem) {
  .grid-container {
    text-align: left;
    column-gap: var(--container-gap, 2rem);
    grid-template-columns: minmax(2rem, 1fr) repeat(2, minmax(0px, 40rem)) minmax(
        2rem,
        1fr
      );

    *:first-child {
      grid-column: 2;
    }

    *:last-child {
      grid-column: 3;
    }
  }

  .grid-container--home {
    padding-bottom: unquote("max(6rem, 15vh)");
    align-items: end;
  }
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip-path: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* Colors */
.bg-dark {
  background-color: $clr-dark;
}
.bg-light {
  background-color: $clr-light;
}
.bg-white {
  background-color: $clr-white;
}

.text-dark {
  color: $clr-dark;
}
.text-light {
  color: $clr-light;
}
.text-white {
  color: $clr-white;
}

/* Typography */

.ff-serif {
  font-family: $ff-serif;
}
.ff-sans-cond {
  font-family: $ff-sans-cond;
}
.ff-sans-normal {
  font-family: $ff-sans-normal;
}

.letter-spacing-1 {
  letter-spacing: 4.75px;
}
.letter-spacing-2 {
  letter-spacing: 2.7px;
}
.letter-spacing-3 {
  letter-spacing: 2.35px;
}

.uppercase {
  text-transform: uppercase;
}

.fs-900 {
  font-size: $fs-900;
}
.fs-800 {
  font-size: $fs-800;
}
.fs-700 {
  font-size: $fs-700;
}
.fs-600 {
  font-size: $fs-600;
}
.fs-500 {
  font-size: $fs-500;
}
.fs-400 {
  font-size: $fs-400;
}
.fs-300 {
  font-size: $fs-300;
}
.fs-200 {
  font-size: $fs-200;
}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
  line-height: 1.1;
}

.numbered-title {
  font-family: $ff-sans-cond;
  font-size: $fs-400;
  text-transform: uppercase;
  @extend .letter-spacing-1;

  span {
    margin-right: 0.5em;
    font-weight: 700;
    color: rgba($clr-white, 0.25);
  }
}
/* ---------- */
/* Components */
/* ---------- */
.large-button {
  position: relative;
  display: inline-grid;
  place-items: center;
  // z-index: 1;
  padding: 0 2em;
  aspect-ratio: 1;
  text-decoration: none;
  border-radius: 50%;
  font-size: 2rem;

  &::after {
    content: "";
    position: absolute;
    z-index: -1;
    background-color: rgba($clr-white, 0.15);
    width: 100%;
    height: 100%;
    border-radius: 50%;
    transition: opacity 500ms linear, transform 750ms ease-in-out;
  }
  &:hover::after,
  &:focus::after {
    opacity: 1;
    transform: scale(1.5);
  }
}

.primary-navigation {
  --m-underline: 2rem;
  list-style: none;
  padding: 0;
  margin: 0;

  a {
    text-decoration: none;

    span {
      margin-right: 0.5em;
      font-weight: 700;
    }
  }

  @media (max-width: 35rem) {
    // Underline-indicators for are deactivated for mobile .primary-navigation. See .underline-indicators
    --m-underline: 0.5rem;
    list-style: none;
    padding: unquote("min(20rem, 15vh)") 2rem;
    margin: 0;
    flex-direction: column;
    position: fixed;
    inset: 0 0 0 30%;
    background-color: rgba($clr-dark,0.75); // Default for browsers not supporting backdrop
    z-index: 9;
    transform: translateX(100%);

    @supports (backdrop-filter: blur(1.5rem)) {
      // Handle Browser Support
      background-color: rgba($clr-white, 0.15);
      backdrop-filter: blur(1.5rem);
    }
  }
}

.mobile-nav-toggle {
  display: block;
  position: absolute;
  right: 1rem;
  top: 2rem;
  width: 1.5rem;
  aspect-ratio: 1;
  background: transparent;
    background-image: url('/shared/icon-hamburger.svg');
  background-repeat: no-repeat;
  border: none;
  z-index: 1;
}

.underline-indicators {
  * {
    padding: var(--m-underline, 1rem) 0;
  }

  a {
    cursor: pointer;
    // padding: var(--m-underline, 1rem) 0;
    border: 0;
    border-bottom: 2px solid rgba($clr-white, 0);

    &:hover {
      border-color: rgba($clr-white, 0.5);
    }

    &:focus {
      border-color: rgba($clr-white, 1);
    }

    @at-root .primary-navigation#{&} {
      @media (max-width: 35rem) {
        border-bottom: 0;
      }
    }

    /* 
        &:visited {
            color: inherit;
        } */
  }
  // .active,
  // [aria-selected="true"] {
  //     border-color: rgba($clr-white, 1);
  // }
}

.tab-list {
  --gap: 2rem;
}

.dot-indicators {
  * {
    cursor: pointer;
    border: 0;
    border-radius: 50%;
    aspect-ratio: 1;
    padding: 0.5rem;
    background-color: rgba($clr-white, 0.25);

    &:hover,
    &:focus {
      background-color: rgba($clr-white, 0.5);
    }
  }
  .active,
  [aria-selected="true"] {
    background-color: $clr-white;
  }
}

.numbered-dots {
  display: flex;
  flex-direction: column;

  * {
    cursor: pointer;
    display: grid;
    place-content: center;
    border: 1px solid;
    border-color: rgba($clr-white, 0.25);
    background-color: $clr-dark;
    transition: border-color 400ms ease-in-out,
      background-color 500ms ease-in-out;
    border-radius: 50%;
    aspect-ratio: 1;
    padding: 1em;
    color: $clr-white;

    &:hover,
    &:focus {
      border-color: $clr-white;
    }
  }
  .active,
  [aria-selected="true"] {
    border-color: $clr-white;
    background-color: $clr-white;
  }
}
